apiVersion: v1
kind: Namespace
metadata:
  name: as7q
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: coredns-data-as7q
  namespace: as7q
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 10Mi
---
apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: hexcamp-as7q
  namespace: as7q
spec:
  template:
    metadata:
      annotations:
        autoscaling.knative.dev/scale-to-zero-pod-retention-period: "30s"
        autoscaling.knative.dev/max-scale: "1"
    spec:
      containerConcurrency: 0
      timeoutSeconds: 120
      containers:
        #- image: ghcr.io/hexcamp/hexcamp-coredns-image@sha256:9b9fce0f4e98167ed1b62ccc0db7bc74b1d834edb0c5cc6a05159cbbfbf35602
        #  command: [ bash, -c ]
        #  args:
        #    - |
        #      set -e
        #      #while true; do sleep 50; done
        #      cd /data/h3/37
        #      while true; do
        #        /coredns -conf Corefile
        #        sleep 5
        #      done
        - image: coredns/coredns
          workingDir: /data/h3/37
          volumeMounts:
          - name: persistent-storage
            mountPath: /data
            readOnly: true
          ports:
          - containerPort: 80
          readinessProbe:
            tcpSocket:
              port: 80
          livenessProbe:
            tcpSocket:
              port: 80
      volumes:
      - name: persistent-storage
        persistentVolumeClaim:
          claimName: coredns-data-as7q
          readOnly: true
---
apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: hexcamp-as7q-rclone
  namespace: as7q
spec:
  template:
    metadata:
      annotations:
        autoscaling.knative.dev/scale-to-zero-pod-retention-period: "10s"
        autoscaling.knative.dev/max-scale: "1"
    spec:
      containerConcurrency: 0
      containers:
      - image: rclone/rclone
        name: user-container
        command: [ sh, -c ]
        args:
        - |
          #while true; do sleep 60; done
          rclone serve webdav /usr/share/nginx/html --user admin --pass $PASSWORD
        env:
        - name: PASSWORD
          valueFrom:
            secretKeyRef:
              name: rclone-password
              key: password
        ports:
        - containerPort: 8080
          protocol: TCP
        volumeMounts:
          - name: data
            mountPath: /usr/share/nginx/html
        readinessProbe:
          successThreshold: 1
          tcpSocket:
            port: 0
        resources: {}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: coredns-data-as7q
      enableServiceLinks: false
      timeoutSeconds: 300
---
apiVersion: v1
data:
  password: cGFzczEyMw==
kind: Secret
metadata:
  name: rclone-password
  namespace: default
type: Opaque
